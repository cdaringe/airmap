"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[24],{9024:function(t,e,i){i.r(e),i.d(e,{CompassControl:function(){return o},ImageControl:function(){return f},InspectControl:function(){return L},LanguageControl:function(){return x},RulerControl:function(){return j},StylesControl:function(){return H},TooltipControl:function(){return R},ZoomControl:function(){return $}});var s=class{constructor(){this.node=document.createElement("div"),this.node.classList.add("mapboxgl-ctrl"),this.node.classList.add("mapboxgl-ctrl-group"),this.node.classList.add("mapbox-control")}addButton(t){this.node.appendChild(t.node)}addClassName(t){this.node.classList.add(t)}removeClassName(t){this.node.classList.remove(t)}onAddControl(){}onRemoveControl(){}onAdd(t){return this.map=t,this.onAddControl(),this.node}onRemove(){this.onRemoveControl(),this.node.parentNode.removeChild(this.node),this.map=void 0}};var n=class{constructor(){this.node=document.createElement("button"),this.node.type="button",this.icon=null}setIcon(t){this.icon=t,this.node.appendChild(t)}setText(t){this.node.textContent=t}onClick(t){this.node.addEventListener("click",t)}addClassName(t){this.node.classList.add(t)}removeClassName(t){this.node.classList.remove(t)}};class o extends s{constructor(t){var e;super(),this.button=new n,this.instant=null===(e=null===t||void 0===t?void 0:t.instant)||void 0===e||e,this.syncRotate=this.syncRotate.bind(this)}insert(){this.addClassName("mapbox-compass"),this.instant||(this.node.hidden=!0),this.button.setIcon((new DOMParser).parseFromString('\n<svg viewBox="0 0 24 24" width="22" height="22" xmlns="http://www.w3.org/2000/svg">\n    <g fill="none" fill-rule="evenodd">\n        <path d="M0 0h24v24H0z"/>\n        <path fill="#f44336" d="M12 3l4 8H8z"/>\n        <path fill="#9E9E9E" d="M12 21l-4-8h8z"/>\n    </g>\n</svg>\n',"image/svg+xml").firstChild),this.button.onClick((()=>{this.map.easeTo({bearing:0,pitch:0})})),this.addButton(this.button)}onAddControl(){this.insert(),this.syncRotate(),this.map.on("rotate",this.syncRotate)}syncRotate(){const t=-1*this.map.getBearing();this.instant||(this.node.hidden=0===t),this.button.icon.style.transform=`rotate(${t}deg)`}}var a,r,l,h=class{loadFile(t){return new Promise(((e,i)=>{const s=new FileReader,n=new Image;s.addEventListener("load",(()=>{const o=s.result;n.onload=()=>{this.id=t.name,this.url=o,this.width=n.width,this.height=n.height,e(this)},n.onerror=i,n.src=o}),!1),s.readAsDataURL(t)}))}loadUrl(t){return new Promise(((e,i)=>{const s=new Image;s.onload=()=>{this.id=t.split("/").pop(),this.url=t,this.width=s.width,this.height=s.height,e(this)},s.onerror=i,s.src=t}))}setInitialPosition(t){if(!this.width||!this.height)throw Error("image is not loaded");const e=t.getCanvas(),i=e.offsetWidth,s=e.offsetHeight,n=i-40,o=s-40,a=Math.min(n/this.width,o/this.height),r=this.width*a,l=this.height*a,h=[[i/2-r/2,s/2-l/2],[i/2+r/2,s/2-l/2],[i/2+r/2,s/2+l/2],[i/2-r/2,s/2+l/2]];t.setPitch(0),this.position=h.map((e=>t.unproject(e)))}get coordinates(){return this.position.map((t=>[t.lng,t.lat]))}get asPolygon(){return{type:"FeatureCollection",features:[{type:"Feature",properties:{id:this.id},geometry:{type:"Polygon",coordinates:[[...this.coordinates,this.coordinates[0]]]}}]}}get asPoints(){return{type:"FeatureCollection",features:this.coordinates.map(((t,e)=>({type:"Feature",properties:{index:e},geometry:{type:"Point",coordinates:t}})))}}get imageSource(){return{id:`${this.id}-raster`,source:{type:"image",url:this.url,coordinates:this.coordinates}}}get polygonSource(){return{id:`${this.id}-polygon`,source:{type:"geojson",data:this.asPolygon}}}get cornersSource(){return{id:`${this.id}-corners`,source:{type:"geojson",data:this.asPoints}}}get rasterLayer(){return{id:`${this.id}-raster`,type:"raster",source:this.imageSource.id,paint:{"raster-fade-duration":0,"raster-opacity":.5}}}get fillLayer(){return{id:`${this.id}-fill`,type:"fill",source:this.polygonSource.id,paint:{"fill-opacity":0}}}get ratio(){return this.width/this.height}getOppositePoint(t){if(0===t)return 2;if(1===t)return 3;if(2===t)return 0;if(3===t)return 1;throw Error("invalid corner index")}};!function(t){t.Default="",t.Move="move",t.Grabbing="grabbing",t.NESWResize="nesw-resize",t.NWSEResize="nwse-resize"}(a||(a={})),function(t){t.Move="move",t.Transform="transform"}(r||(r={})),function(t){t.Visible="visible",t.None="none"}(l||(l={}));var d=i(2604),c=i.n(d);const u={id:"$contourLayerId",type:"line",layout:{"line-cap":"round","line-join":"round"},paint:{"line-dasharray":[.2,2],"line-color":"#3d5afe","line-width":2}},p={id:"$shadowLayerId",type:"fill",paint:{"fill-opacity":0}},m={id:"$cornersLayer",type:"circle",paint:{"circle-radius":5,"circle-color":"#3d5afe","circle-stroke-width":3,"circle-stroke-color":"#fff"}};function g(t,e,i){const s=t.getCanvas();let n;function o(s){const o=t.project(e.position[n]),a=t.project(e.position[e.getOppositePoint(n)]),r=t.project(s.lngLat),l=function(t,e,i){const s=[i[0]-t[0],i[1]-t[1]],n=[e[0]-t[0],e[1]-t[1]],o=Math.pow(n[0],2)+Math.pow(n[1],2),a=(n[0]*s[0]+n[1]*s[1])/o;return[t[0]+n[0]*a,t[1]+n[1]*a]}([o.x,o.y],[a.x,a.y],[r.x,r.y]),h=t.unproject(l),c=e.position;c[n]=new d.LngLat(h.lng,h.lat),g(n),0===n?(c[1]=new d.LngLat(c[1].lng,h.lat),c[3]=new d.LngLat(h.lng,c[3].lat)):1===n?(c[0]=new d.LngLat(c[0].lng,h.lat),c[2]=new d.LngLat(h.lng,c[2].lat)):2===n?(c[3]=new d.LngLat(c[3].lng,h.lat),c[1]=new d.LngLat(h.lng,c[1].lat)):3===n&&(c[2]=new d.LngLat(c[2].lng,h.lat),c[0]=new d.LngLat(h.lng,c[0].lat)),i(c)}function r(){n=null,s.style.cursor="",t.off("mousemove",o),t.setLayoutProperty(m.id,"visibility",l.Visible),t.setLayoutProperty(u.id,"visibility",l.Visible)}function h(e){e.preventDefault(),n=e.features[0].properties.index,t.on("mousemove",o),t.setLayoutProperty(m.id,"visibility",l.None),t.setLayoutProperty(u.id,"visibility",l.None),document.addEventListener("pointerup",r,{once:!0})}function c(t){g(t.features[0].properties.index)}function p(){s.style.cursor=""}function g(t){s.style.cursor=[1,3].includes(t)?a.NESWResize:a.NWSEResize}return t.addLayer(Object.assign(Object.assign({},u),{source:e.polygonSource.id})),t.addLayer(Object.assign(Object.assign({},m),{source:e.cornersSource.id})),t.on("mouseenter",m.id,c),t.on("mouseleave",m.id,p),t.on("mousedown",m.id,h),()=>{t.off("mousemove",o),t.off("mouseenter",m.id,c),t.off("mouseleave",m.id,p),t.off("mousedown",m.id,h),document.removeEventListener("pointerup",r),t.getLayer(m.id)&&t.removeLayer(m.id),t.getLayer(u.id)&&t.removeLayer(u.id)}}var v=function(t,e,i,s){return new(i||(i=Promise))((function(n,o){function a(t){try{l(s.next(t))}catch(e){o(e)}}function r(t){try{l(s.throw(t))}catch(e){o(e)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,r)}l((s=s.apply(t,e||[])).next())}))};class f extends s{constructor(){super(),this.button=new n,this.fileInput=document.createElement("input"),this.fileInput.type="file",this.fileInput.accept=".jpg, .jpeg, .png",this.fileInput.multiple=!0,this.images=[],this.editMode=null,this.selectedImage=null,this.onMapClick=this.onMapClick.bind(this),this.onFileInputChange=this.onFileInputChange.bind(this),this.keyDownListener=this.keyDownListener.bind(this)}insert(){this.addClassName("mapbox-control-image"),this.button.setIcon((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20" fill="#505050">\n  <path d="M0 0h24v24H0V0z" fill="none"/>\n  <path d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86l-3 3.87L9 13.14 6 17h12l-3.86-5.14z"/>\n</svg>\n',"image/svg+xml").firstChild),this.addButton(this.button),this.node.appendChild(this.fileInput),this.button.onClick((()=>this.fileInput.click())),this.fileInput.addEventListener("change",this.onFileInputChange)}onFileInputChange(){Array.from(this.fileInput.files).forEach(((t,e)=>v(this,void 0,void 0,(function*(){const i=yield this.addImage(t);this.fileInput.files.length-1===e&&this.selectImage(i.id)}))))}addImage(t,e={}){return v(this,void 0,void 0,(function*(){const i=new h;if("string"===typeof t)yield i.loadUrl(t);else{if(!t)throw Error("file or url is required");yield i.loadFile(t)}return e.position?i.position=e.position:i.setInitialPosition(this.map),this.images.push(i),this.drawImage(i),this.map.fire("image.add",i),i}))}drawImage(t){this.map.addSource(t.imageSource.id,t.imageSource.source),this.map.addSource(t.polygonSource.id,t.polygonSource.source),this.map.addSource(t.cornersSource.id,t.cornersSource.source),this.map.addLayer(t.rasterLayer),this.map.addLayer(t.fillLayer)}redraw(){this.images.forEach((t=>this.drawImage(t))),this.movingOff&&this.movingOff(),this.transformOff&&this.transformOff()}onMapClick(t){const e=this.images.map((t=>t.fillLayer.id)),i=this.map.queryRenderedFeatures(t.point,{layers:e});i.length?this.selectImage(i[0].properties.id):this.deselectImage()}movingOn(){this.movingOff=function(t,e,i){const s=t.getCanvas();let n=null;function o(t){const s=t.lngLat,o=n.lng-s.lng,a=n.lat-s.lat;i(e.position.map((t=>new d.LngLat(t.lng-o,t.lat-a)))),n=s}function r(){s.style.cursor=a.Move,t.off("mousemove",o),t.setLayoutProperty(u.id,"visibility",l.Visible)}function h(e){e.preventDefault(),n=e.lngLat,s.style.cursor=a.Grabbing,t.on("mousemove",o),t.setLayoutProperty(u.id,"visibility",l.None),document.addEventListener("pointerup",r,{once:!0})}function c(){s.style.cursor=a.Move}function m(){s.style.cursor=""}return t.addLayer(Object.assign(Object.assign({},u),{source:e.polygonSource.id})),t.addLayer(Object.assign(Object.assign({},p),{source:e.polygonSource.id})),t.on("mouseenter",p.id,c),t.on("mouseleave",p.id,m),t.on("mousedown",p.id,h),()=>{s.style.cursor="",t.off("mousemove",o),t.off("mouseenter",p.id,c),t.off("mouseleave",p.id,m),t.off("mousedown",p.id,h),document.removeEventListener("pointerup",r),t.getLayer(p.id)&&t.removeLayer(p.id),t.getLayer(u.id)&&t.removeLayer(u.id)}}(this.map,this.selectedImage,(t=>{this.updateImageSource(t)}))}transformOn(){this.transformOff=g(this.map,this.selectedImage,(t=>{this.updateImageSource(t)}))}selectImage(t){this.selectedImage&&this.selectedImage.id!==t&&this.deselectImage(),this.selectedImage=this.images.find((e=>e.id===t)),this.editMode?this.editMode===r.Move&&(this.editMode=r.Transform,this.movingOff(),this.transformOn()):(this.editMode=r.Move,this.movingOn()),this.map.fire("image.select",this.selectedImage),document.addEventListener("keydown",this.keyDownListener)}deselectImage(){this.selectedImage&&(this.editMode===r.Move?this.movingOff():this.editMode===r.Transform&&this.transformOff(),this.map.fire("image.deselect",this.selectedImage),this.selectedImage=null,this.editMode=null,document.removeEventListener("keydown",this.keyDownListener))}updateImageSource(t){const e=this.selectedImage;e.position=t,this.map.getSource(e.imageSource.id).setCoordinates(e.coordinates),this.map.getSource(e.polygonSource.id).setData(e.asPolygon),this.map.getSource(e.cornersSource.id).setData(e.asPoints),this.map.fire("image.update",this.selectedImage)}keyDownListener(t){"Escape"===t.key&&this.deselectImage()}onAddControl(){this.map.isStyleLoaded()?this.insert():this.map.once("style.load",(()=>this.insert())),this.map.on("style.load",(()=>this.redraw())),this.mapContainer=this.map.getContainer(),this.map.on("click",this.onMapClick)}}var y;function C(t){let e=0;const i=document.createElement("div");i.classList.add("mapbox-control-inspect-popup");const s=document.createElement("div");s.classList.add("mapbox-control-inspect-content");const n=()=>{const t=document.createElement("div");return t.setAttribute("type","button"),t.classList.add("mapbox-control-inspect-prev"),t.appendChild((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#505050">\n    <path d="M14 7l-5 5 5 5V7z"/>\n    <path fill="none" d="M24 0v24H0V0h24z"/>\n</svg>\n',"image/svg+xml").firstChild),t.addEventListener("click",(()=>l(y.Prev))),t},o=()=>{const t=document.createElement("div");return t.setAttribute("type","button"),t.classList.add("mapbox-control-inspect-next"),t.appendChild((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#505050">\n    <path d="M10 17l5-5-5-5v10z"/>\n    <path fill="none" d="M0 24V0h24v24H0z"/>\n</svg>\n',"image/svg+xml").firstChild),t.addEventListener("click",(()=>l(y.Next))),t},a=()=>{const i=document.createElement("div");return i.classList.add("mapbox-control-inspect-header"),i.appendChild(n()),i.appendChild((()=>{const i=document.createElement("div");return i.classList.add("mapbox-control-inspect-current"),i.textContent=`${e+1} / ${t.length}`,i})()),i.appendChild(o()),i},r=t=>{const e=document.createElement("table");e.classList.add("mapbox-control-inspect-grid");return function(t){var e;const i=["layer",{key:"id",value:t.layer.id},{key:"type",value:t.layer.type},{key:"source",value:t.layer.source},{key:"source-layer",value:null!==(e=t.layer["source-layer"])&&void 0!==e?e:"\u2014"}],s=["properties"];return t.id&&s.push({key:"$id",value:t.id}),Object.entries(t.properties).forEach((([t,e])=>{s.push({key:t,value:e})})),1===s.length&&s.pop(),[...i,...s]}(t).forEach((t=>{const i=document.createElement("tr");if("string"===typeof t){const s=document.createElement("th");return s.classList.add("mapbox-control-inspect-caption"),s.colSpan=2,s.textContent=t,i.appendChild(s),void e.append(i)}const s=document.createElement("th"),n=document.createElement("td");s.classList.add("mapbox-control-inspect-key"),n.classList.add("mapbox-control-inspect-value"),s.textContent=t.key,n.textContent=String(t.value),i.appendChild(s),i.appendChild(n),e.append(i)})),e};function l(i){i===y.Prev?e=0!==e?e-1:t.length-1:i===y.Next&&(e=e!==t.length-1?e+1:0),s.innerHTML="",s.appendChild(a()),s.appendChild(r(t[e]))}return i.appendChild(s),t.length?(t.length>1&&s.appendChild(a()),s.appendChild(r(t[e]))):s.textContent="No features",i}!function(t){t.Next="next",t.Prev="prev"}(y||(y={}));class L extends s{constructor(t){super(),this.console=null===t||void 0===t?void 0:t.console,this.popupNode=null,this.lngLat=null,this.isInspecting=!1,this.button=new n}insert(){this.addClassName("mapbox-control-inspect"),this.button.setIcon((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="#505050">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z"/>\n</svg>\n',"image/svg+xml").firstChild),this.button.onClick((()=>{this.isInspecting?this.inspectingOff():this.inspectingOn()})),this.addButton(this.button),this.mapClickListener=this.mapClickListener.bind(this),this.updatePosition=this.updatePosition.bind(this)}inspectingOn(){this.isInspecting=!0,this.button.addClassName("-active"),this.map.on("click",this.mapClickListener),this.map.on("move",this.updatePosition),this.map.getCanvas().style.cursor="pointer"}inspectingOff(){this.isInspecting=!1,this.button.removeClassName("-active"),this.map.off("click",this.mapClickListener),this.map.off("move",this.updatePosition),this.map.getCanvas().style.cursor="",this.removePopup()}getFeatures(t){const e=[[t.point.x-3,t.point.y+3],[t.point.x+3,t.point.y-3]];return this.map.queryRenderedFeatures(e)}addPopup(t){this.popupNode=C(t),this.mapContainer.appendChild(this.popupNode),this.updatePosition(),this.console&&console.log(t)}removePopup(){this.popupNode&&(this.mapContainer.removeChild(this.popupNode),this.popupNode=null)}updatePosition(){if(!this.lngLat)return;const t=this.mapCanvas.getBoundingClientRect(),e=this.map.project(this.lngLat);this.popupNode.style.left=e.x-t.left+"px",this.popupNode.style.top=e.y-t.top+"px"}mapClickListener(t){this.lngLat=t.lngLat;const e=this.getFeatures(t);this.removePopup(),this.addPopup(e)}onAddControl(){this.mapContainer=this.map.getContainer(),this.mapCanvas=this.map.getCanvas(),this.insert()}onRemoveControl(){this.inspectingOff()}}function w(t){return"mul"===t?"name":`name_${t}`}const b=["en","es","fr","de","ru","zh","pt","ar","ja","ko","mul"];class x extends s{constructor(t){var e,i,s;super(),this.supportedLanguages=null!==(e=null===t||void 0===t?void 0:t.supportedLanguages)&&void 0!==e?e:b,this.language=null===t||void 0===t?void 0:t.language,this.getLanguageField=null!==(i=null===t||void 0===t?void 0:t.getLanguageField)&&void 0!==i?i:w,this.excludedLayerIds=null!==(s=null===t||void 0===t?void 0:t.excludedLayerIds)&&void 0!==s?s:[],this.styleChangeListener=this.styleChangeListener.bind(this)}onAddControl(){this.map.on("styledata",this.styleChangeListener)}onRemoveControl(){this.map.off("styledata",this.styleChangeListener)}styleChangeListener(){this.map.off("styledata",this.styleChangeListener),this.setLanguage(this.language)}setLanguage(t=this.browserLanguage()){const e=this.supportedLanguages.indexOf(t)<0?"mul":t,i=this.map.getStyle(),s=this.getLanguageField(e),n=i.layers.map((t=>{if("symbol"!==t.type)return t;if(!t.layout||!t.layout["text-field"])return t;if(-1!==this.excludedLayerIds.indexOf(t.id))return t;const e=function(t,e){if("string"===typeof t)return t.replace(/{name.*?}/,`{${e}}`);const i=JSON.stringify(t);return Array.isArray(t)?JSON.parse(i.replace(/"coalesce",\["get","name.*?"]/g,`"coalesce",["get","${e}"]`)):JSON.parse(i.replace(/{name.*?}/g,`{${e}}`))}(t.layout["text-field"],s);return Object.assign(Object.assign({},t),{layout:Object.assign(Object.assign({},t.layout),{"text-field":e})})}));this.map.setStyle(Object.assign(Object.assign({},i),{layers:n}))}browserLanguage(){const t=navigator.languages?navigator.languages[0]:navigator.language,e=t.split("-"),i=e.length>1?e[0]:t;return this.supportedLanguages.indexOf(i)>-1?i:"mul"}}var S=i(2247),k=i(9065);var M=function(t,e,i){void 0===i&&(i={});var s=(0,S.c9)(t),n=(0,S.c9)(e),o=(0,k.Ht)(n[1]-s[1]),a=(0,k.Ht)(n[0]-s[0]),r=(0,k.Ht)(s[1]),l=(0,k.Ht)(n[1]),h=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(a/2),2)*Math.cos(r)*Math.cos(l);return(0,k.DL)(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h)),i.units)};function I(t){return t<1?`${(1e3*t).toFixed()} m`:`${t.toFixed(2)} km`}function O(t){return{type:"Feature",properties:{},geometry:{type:"LineString",coordinates:t}}}function N(t=[],e=[]){return{type:"FeatureCollection",features:t.map(((t,i)=>({type:"Feature",properties:{text:e[i]},geometry:{type:"Point",coordinates:t}})))}}const P="controls-layer-line",E="controls-layer-symbol",z="controls-source-line",F="controls-source-symbol";class j extends s{constructor(t){var e,i,s,o,a,r,l,h,d;super(),this.isMeasuring=!1,this.markers=[],this.coordinates=[],this.labels=[],this.units=null!==(e=null===t||void 0===t?void 0:t.units)&&void 0!==e?e:"kilometers",this.font=null!==(i=null===t||void 0===t?void 0:t.font)&&void 0!==i?i:["Roboto Medium"],this.fontSize=null!==(s=null===t||void 0===t?void 0:t.fontSize)&&void 0!==s?s:12,this.fontHalo=null!==(o=null===t||void 0===t?void 0:t.fontHalo)&&void 0!==o?o:1,this.textVariableAnchor=(null===t||void 0===t?void 0:t.textVariableAnchor)||["top"],this.textAllowOverlap=(null===t||void 0===t?void 0:t.textAllowOverlap)||!1,this.markerNodeSize=`${null!==(a=null===t||void 0===t?void 0:t.markerNodeSize)&&void 0!==a?a:12}px`,this.markerNodeBorderWidth=`${null!==(r=null===t||void 0===t?void 0:t.markerNodeBorderWidth)&&void 0!==r?r:2}px`,this.labelFormat=null!==(l=null===t||void 0===t?void 0:t.labelFormat)&&void 0!==l?l:I,this.mainColor=null!==(h=null===t||void 0===t?void 0:t.mainColor)&&void 0!==h?h:"#263238",this.secondaryColor=null!==(d=null===t||void 0===t?void 0:t.secondaryColor)&&void 0!==d?d:"#fff",this.button=new n,this.mapClickListener=this.mapClickListener.bind(this),this.styleLoadListener=this.styleLoadListener.bind(this)}insert(){this.addClassName("mapbox-control-ruler"),this.button.setIcon((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" viewBox="0 0 24 24" width="22" height="22" fill="#505050">\n    <rect fill="none" height="24" width="24"/>\n    <path d="M20,6H4C2.9,6,2,6.9,2,8v8c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V8C22,6.9,21.1,6,20,6z M20,16H4V8h3v3c0,0.55,0.45,1,1,1h0 c0.55,0,1-0.45,1-1V8h2v3c0,0.55,0.45,1,1,1h0c0.55,0,1-0.45,1-1V8h2v3c0,0.55,0.45,1,1,1h0c0.55,0,1-0.45,1-1V8h3V16z"/>\n</svg>\n',"image/svg+xml").firstChild),this.button.onClick((()=>{this.isMeasuring?this.measuringOff():this.measuringOn()})),this.addButton(this.button)}draw(){this.map.addSource(z,{type:"geojson",data:O(this.coordinates)}),this.map.addSource(F,{type:"geojson",data:N(this.coordinates,this.labels)}),this.map.addLayer({id:P,type:"line",source:z,paint:{"line-color":this.mainColor,"line-width":2}}),this.map.addLayer({id:E,type:"symbol",source:F,layout:{"text-field":"{text}","text-font":this.font,"text-anchor":"top","text-size":this.fontSize,"text-offset":[0,.8]},paint:{"text-color":this.mainColor,"text-halo-color":this.secondaryColor,"text-halo-width":this.fontHalo}})}measuringOn(){this.isMeasuring=!0,this.markers=[],this.coordinates=[],this.labels=[],this.map.getCanvas().style.cursor="crosshair",this.button.addClassName("-active"),this.draw(),this.map.on("click",this.mapClickListener),this.map.on("style.load",this.styleLoadListener),this.map.fire("ruler.on")}measuringOff(){this.isMeasuring=!1,this.map.getCanvas().style.cursor="",this.button.removeClassName("-active"),this.map.removeLayer(P),this.map.removeLayer(E),this.map.removeSource(z),this.map.removeSource(F),this.markers.forEach((t=>t.remove())),this.map.off("click",this.mapClickListener),this.map.off("style.load",this.styleLoadListener),this.map.fire("ruler.off")}mapClickListener(t){const e=this.getMarkerNode(),i=new(c().Marker)({element:e,draggable:!0}).setLngLat(t.lngLat).addTo(this.map),s=[t.lngLat.lng,t.lngLat.lat];this.coordinates.push(s),this.updateLabels(),this.updateSource(),this.markers.push(i),this.map.fire("ruler.change",{coordinates:this.coordinates}),i.on("drag",(()=>{const t=this.markers.indexOf(i),e=i.getLngLat();this.coordinates[t]=[e.lng,e.lat],this.updateLabels(),this.updateSource()})),i.on("dragend",(()=>{this.map.fire("ruler.change",{coordinates:this.coordinates})}))}updateSource(){const t=this.map.getSource(z),e=this.map.getSource(F);t.setData(O(this.coordinates)),e.setData(N(this.coordinates,this.labels))}updateLabels(){const{coordinates:t,units:e,labelFormat:i}=this;let s=0;this.labels=t.map(((n,o)=>0===o?i(0):(s+=M(t[o-1],t[o],{units:e}),i(s))))}getMarkerNode(){const t=document.createElement("div");return t.style.width="12px",t.style.height="12px",t.style.borderRadius="50%",t.style.background=this.secondaryColor,t.style.boxSizing="border-box",t.style.border=`2px solid ${this.mainColor}`,t}styleLoadListener(){this.draw()}onAddControl(){this.insert()}onRemoveControl(){this.isMeasuring&&this.measuringOff(),this.map.off("click",this.mapClickListener)}}class H extends s{constructor(t){var e;super(),this.styles=null!==(e=null===t||void 0===t?void 0:t.styles)&&void 0!==e?e:this.defaultOptions,this.onChange=null===t||void 0===t?void 0:t.onChange,this.buttons=[]}insert(){this.addClassName("mapbox-control-styles"),this.styles.forEach((t=>{const e=new n;e.setText(t.label),e.onClick((()=>{e.node.classList.contains("-active")||(this.map.setStyle(t.styleUrl),this.onChange&&this.onChange(t))})),this.buttons.push(e),this.addButton(e)})),this.map.on("styledata",(()=>{this.buttons.forEach((t=>{t.removeClassName("-active")}));const t=this.styles.map((t=>t.styleName)).indexOf(this.map.getStyle().name);if(-1!==t){this.buttons[t].addClassName("-active")}}))}get defaultOptions(){return[{label:"Streets",styleName:"Mapbox Streets",styleUrl:"mapbox://styles/mapbox/streets-v11"},{label:"Satellite",styleName:"Mapbox Satellite Streets",styleUrl:"mapbox://sprites/mapbox/satellite-streets-v11"}]}onAddControl(){this.insert()}}class R extends s{constructor(t){if(super(),"function"!==typeof(null===t||void 0===t?void 0:t.getContent))throw Error("getContent function must be defined");this.layer=null===t||void 0===t?void 0:t.layer,this.getContent=null===t||void 0===t?void 0:t.getContent,this.container=document.createElement("div"),this.eventShow=this.layer?"mouseenter":"mouseover",this.eventHide=this.layer?"mouseleave":"mouseout",this.node=document.createElement("div"),this.node.classList.add("mapbox-control-tooltip"),this.lngLat=null,this.cursorStyle="",this.show=this.show.bind(this),this.move=this.move.bind(this),this.hide=this.hide.bind(this),this.updatePosition=this.updatePosition.bind(this)}show(){this.mapContainer.appendChild(this.node),this.cursorStyle=this.mapCanvas.style.cursor,this.mapCanvas.style.cursor="pointer",this.map.on("move",this.updatePosition)}hide(){this.node.innerHTML="",this.mapContainer.removeChild(this.node),this.mapCanvas.style.cursor=this.cursorStyle,this.map.off("move",this.updatePosition)}move(t){this.node.innerHTML=this.getContent(t),this.lngLat=t.lngLat,this.updatePosition()}updatePosition(){if(!this.lngLat)return;const t=this.map.project(this.lngLat);this.node.style.left=`${t.x}px`,this.node.style.top=`${t.y}px`}onAddControl(){this.mapContainer=this.map.getContainer(),this.mapCanvas=this.map.getCanvas(),this.layer?(this.map.on(this.eventShow,this.layer,this.show),this.map.on("mousemove",this.layer,this.move),this.map.on(this.eventHide,this.layer,this.hide)):(this.map.on(this.eventShow,this.show),this.map.on("mousemove",this.move),this.map.on(this.eventHide,this.hide))}onRemoveControl(){this.layer?(this.map.off(this.eventShow,this.layer,this.show),this.map.off("mousemove",this.layer,this.move),this.map.off(this.eventHide,this.layer,this.hide)):(this.map.off(this.eventShow,this.show),this.map.off("mousemove",this.move),this.map.off(this.eventHide,this.hide)),this.hide()}}class $ extends s{constructor(){super(),this.zoomIn=new n,this.zoomOut=new n}insert(){this.addClassName("mapbox-zoom"),this.zoomIn.setIcon((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" viewBox="0 0 24 24" fill="#505050" width="20" height="20">\n    <rect fill="none" height="24" width="24"/>\n    <path d="M18,13h-5v5c0,0.55-0.45,1-1,1l0,0c-0.55,0-1-0.45-1-1v-5H6c-0.55,0-1-0.45-1-1l0,0c0-0.55,0.45-1,1-1h5V6 c0-0.55,0.45-1,1-1l0,0c0.55,0,1,0.45,1,1v5h5c0.55,0,1,0.45,1,1l0,0C19,12.55,18.55,13,18,13z"/>\n</svg>\n',"image/svg+xml").firstChild),this.zoomIn.onClick((()=>this.map.zoomIn())),this.zoomOut.setIcon((new DOMParser).parseFromString('\n<svg xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" viewBox="0 0 24 24" fill="#505050" width="20" height="20">\n    <rect fill="none" height="24" width="24"/>\n    <path d="M18,13H6c-0.55,0-1-0.45-1-1l0,0c0-0.55,0.45-1,1-1h12c0.55,0,1,0.45,1,1l0,0C19,12.55,18.55,13,18,13z"/>\n</svg>\n',"image/svg+xml").firstChild),this.zoomOut.onClick((()=>this.map.zoomOut())),this.addButton(this.zoomIn),this.addButton(this.zoomOut)}onAddControl(){this.insert()}}}}]);